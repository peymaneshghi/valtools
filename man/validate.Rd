% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/validate.R
\name{vt_validate_source}
\alias{vt_validate_source}
\alias{vt_validate_build}
\alias{vt_validate_install}
\alias{vt_validate_installed_package}
\alias{vt_validate_report}
\title{Validate a package}
\usage{
vt_validate_source(src = ".", open = interactive())

vt_validate_build(src = ".", ...)

vt_validate_install(
  src = ".",
  ...,
  install_verbose = TRUE,
  install_tests = TRUE,
  reload = TRUE
)

vt_validate_installed_package(
  package,
  output_directory = ".",
  open = interactive()
)

vt_validate_report(version, open = interactive())
}
\arguments{
\item{src}{location of the source code. Assumed to be the same location as "pkg"}

\item{open}{should the validation report be opened after it is built?}

\item{...}{Additional argument passed to \code{devtools::build()}}

\item{install_verbose}{should the installation be verbose?}

\item{install_tests}{should the installation include installation of package-specific tests (if any)?}

\item{reload}{Should package be reloaded after install? defaults to TRUE}

\item{package}{installed package name}

\item{output_directory}{Location of directory to output validation report}

\item{version}{version of validation report to output. If missing, it tries to use the
change_log.md, if that is missing then looks at the package version if the validation package
is of an R package.}
}
\value{
path to either the validation report or the bundled package
}
\description{
\code{vt_validate_source} runs the validation on the current source, temporarily
installing the source to properly evaluate the report. \code{vt_validate_build()}
runs the same step, then compiles a bundle that includes th the validation
report and any other contents that are required for validation. Finally,
\code{vt_validate_installed_package} run rerun the validation report for packages
that were built and then installed using the\code{vt_validate_build()}.
}
